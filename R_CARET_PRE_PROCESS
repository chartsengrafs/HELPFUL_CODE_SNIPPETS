library(rnz)
library(ggplot2)
library(dplyr)
library(purrr)
library(h2o)
library(caret)
library(DataCombine)

#Convert all factor columns
f_cols<- c("f1, f2")

#Convert numeric
num_cols<-c("n1,n2")


#Convert factor variables to factor format 
rFrame[f_cols] <- lapply(rFrame[f_cols],factor)
#Convert factor variables to factor format 
rFrame[num_cols] <- lapply(rFrame[num_cols],as.numeric)


#Dummy convert factor variables

dmy2 <- dummyVars(" ~ .", data = rFrame[f_cols], fullRank=T)
trsf2 <- data.frame(predict(dmy2, newdata = rFrame))

#Combine dummies into original Frame
rFrame2<-cbind(rFrame, trsf2)


#Drop old factors
rFrame3 <- rFrame2[, !colnames(rFrame2) %in% f_cols]

#Pre-processing

nzv <- nearZeroVar(rFrame3, saveMetrics= TRUE)
nzv_cols <- nearZeroVar(rFrame3)
print(nzv, max.print=500)

#remove ner zero variance predictors
if(length(nzv) > 0) rFrame4 <-rFrame3[, -nzv_cols]



#Center and scale - exclude certain columns
rFrame_No_Transform <- subset(rFrame4, select = -c(exclude_this, exclude_this_new_var_as_well) )

#Train the preprocessing center and scale
preProcValues <- preProcess(rFrame_No_Transform, method = c("center", "scale"))


#Apply to the dataset 
trainTransformed <- predict(preProcValues, rFrame4)


#Check for any missing values
print(sapply(trainTransformed, function(x) sum(is.na(x))))

#Split train and test 
Train <- rFrame4[ trainIndex,]
Test  <- rFrame4[-trainIndex,]











